#!/usr/bin/env python
PACKAGE = "loop_closing_ros"
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()


feature_type_enum = gen.enum([
                       gen.const("ORB", int_t, 0, ""),
                       gen.const("SURF", int_t, 1, ""),
                       gen.const("SIFT", int_t, 2, ""),
                       gen.const("KAZE", int_t, 3, ""),
                       gen.const("AKAZE", int_t, 4, ""),
                       gen.const("BEBLID", int_t, 5, "")
                    ], "available feature type")

#Matching
gen.add("feature_type", int_t, 0, "feature type", 1, 0, 10, edit_method=feature_type_enum)
gen.add("ransac_reprojection_error", double_t, 0, "The parameter value is the maximum allowed distance between the observed and computed point projections to consider it an inlier.", 8, 0, 40)
gen.add("ransac_iterations", int_t, 0, "Number of iterations for Ransac.", 100, 0, 1000)

# loop closure 
gen.add("min_score", double_t, 0, "Minimum number of score of a frame to be consider potential candidate", 0.15, 0, 1)
gen.add("inlier", int_t, 0, "Minimum number of inlier", 10, 1, 10000)
gen.add("top_match", int_t, 0, "Top N frame from fbow database to check for potential loop closure candidate", 7, 1, 100)
gen.add("first_candidate", int_t, 0, "first frame to start check for loop closure candidate", 10, 1, 10000000)
gen.add("skip_frame",int_t, 0, "number of frame to skip after find a loop closure candidate", 10, 1, 10000000)
gen.add("near_frame",int_t, 0, "number of frame to ignore when featching loop closure matching result", 10, 1, 10000000)
gen.add("vocab_path", str_t, 0, "abosulte path for vocabulary", "")
exit(gen.generate(PACKAGE, "Loopclosing", "Loopclosing"))